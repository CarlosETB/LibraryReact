{"version":3,"sources":["Api.js","Home.js","EditSeries.js","Series.js","NewSeries.js","App.js","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","apis","loadGenres","get","saveSeries","newSeries","post","loadSeriesByGenre","genre","deleteSeries","id","delete","loadSeriesById","updateSeries","series","put","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","genres","isLoading","_this2","setState","then","res","data","react_default","a","createElement","key","react_router_dom","to","concat","className","src","map","renderGenreLink","alt","href","Component","statuses","watched","watching","toWathch","EditSeries","redirect","bind","assertThisInitialized","match","params","_this3","name","refs","value","status","comments","react_router","type","defaultValue","ref","keys","onClick","Series","renderSeries","loadData","_this4","length","NewSeries","console","log","About","App","role","height","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.10d01298.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3001'\n})\n\nexport const loadGenres = () => api.get('genres')\nexport const saveSeries = (newSeries) => api.post('series', newSeries)\nexport const updateSeries = (series) => api.put('series/' + series.id, series)\nexport const loadSeriesByGenre = (genre) => api.get('series?genre=' + genre)\nexport const deleteSeries = (id) => api.delete('series/' + id)\nexport const loadSeriesById = (id) => api.get('series/' + id)\nconst apis = {\n  loadGenres,\n  saveSeries,\n  loadSeriesByGenre,\n  deleteSeries,\n  loadSeriesById,\n  updateSeries\n}\nexport default apis\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport api from './Api'\n\nclass Home extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      genres: [],\n      isLoading: false\n    }\n  }\n  componentDidMount () {\n    this.setState({ isLoading: true })\n    api.loadGenres()\n      .then((res) => {\n        this.setState({\n          isLoading: false,\n          genres: res.data\n        })\n      })\n  }\n  renderGenreLink (genre) {\n    return (\n      <span key={genre}>&nbsp;<Link to={`/series/${genre}`}>{genre}</Link>&nbsp;</span>\n    )\n  }\n  render () {\n    return (\n      <div>\n        <section id='intro' className='intro-section'>\n          <div className='container'>\n            <div className='row'>\n              <div className='col-lg-12'>\n                <h1><img src='images/logo.png' /></h1>\n                <p>Nunca mais esqueça uma série que você assistiu ou que alguém lhe indicou.</p>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section>\n          {\n            this.state.isLoading &&\n              <span>Aguarde, carregando...</span>\n          }\n          {!this.state.isLoading &&\n          <div>\n              Ver séries do genêro:\n            { this.state.genres.map(this.renderGenreLink) }\n          </div>\n          }\n\n          <div className='container'>\n            <div className='row'>\n              <div className='col-lg-12'>\n                <h1>Para assistir</h1>\n                <div id='series' className='row list-group'>\n                  <div className='item  col-xs-4 col-lg-4'>\n                    <div className='thumbnail'>\n                      <img className='group list-group-image' src='http://placehold.it/400x250/000/fff' alt='' />\n                      <div className='caption'>\n                        <h4 className='group inner list-group-item-heading'>\n                        How I met your mother\n                        </h4>\n                        <div className='row'>\n                          <div className='col-xs-12 col-md-6'>\n                            <p className='lead'>AÇÃO</p>\n                          </div>\n                          <div className='col-xs-12 col-md-6'>\n                            <a className='btn btn-success' href=''>Gerenciar</a>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='item  col-xs-4 col-lg-4'>\n                    <div className='thumbnail'>\n                      <img className='group list-group-image' src='http://placehold.it/400x250/000/fff' alt='' />\n                      <div className='caption'>\n                        <h4 className='group inner list-group-item-heading'>\n                        How I met your mother\n                        </h4>\n                        <div className='row'>\n                          <div className='col-xs-12 col-md-6'>\n                            <p className='lead'>AÇÃO</p>\n                          </div>\n                          <div className='col-xs-12 col-md-6'>\n                            <a className='btn btn-success' href='http://www.jquery2dotnet.com'>Gerenciar</a>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport api from './Api'\nimport { Redirect } from 'react-router-dom'\n\nconst statuses = {\n  'watched': 'Assistido',\n  'watching': 'Assistindo',\n  'toWathch': 'Assistir'\n}\n\nclass EditSeries extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      genres: [],\n      isLoading: false,\n      redirect: false,\n      series: {}\n    }\n    this.saveSeries = this.saveSeries.bind(this)\n  }\n  componentDidMount () {\n    this.setState({ isLoading: true })\n    api.loadSeriesById(this.props.match.params.id)\n      .then((res) => this.setState({ series: res.data }))\n    api.loadGenres()\n      .then((res) => {\n        this.setState({\n          isLoading: false,\n          genres: res.data\n        })\n      })\n  }\n  saveSeries () {\n    const newSeries = {\n      id: this.props.match.params.id,\n      name: this.refs.name.value,\n      status: this.refs.status.value,\n      genre: this.refs.genre.value,\n      comments: this.refs.comments.value\n    }\n    api.updateSeries(newSeries)\n      .then((res) => {\n        this.setState({\n          redirect: '/series/' + this.refs.genre.value\n        })\n      })\n  }\n  render () {\n    return (\n      <section className='intro-section'>\n        {this.state.redirect &&\n          <Redirect to={this.state.redirect} />\n        }\n        <h1>Editar série</h1>\n        <form>\n            Nome: <input type='text' defaultValue={this.state.series.name} ref='name' className='form-control' /><br />\n            Status:\n          <select ref='status'>\n            {Object\n              .keys(statuses)\n              .map(key => <option key={key} value={key}>{statuses[key]}</option>)\n            }\n          </select><br />\n            Genero:\n          <select ref='genre'>\n            {this.state.genres\n              .map(key => <option key={key} value={key}>{key}</option>)\n            }\n          </select><br />\n          Comentários: <textarea ref='comments' type='text' className='form-control' /><br />\n          <button type='button' onClick={this.saveSeries}>Salvar</button>\n        </form>\n      </section>\n    )\n  }\n}\nexport default EditSeries\n","import React, { Component } from 'react'\nimport api from './Api'\nimport { Link } from 'react-router-dom'\n\nconst statuses = {\n  'watched': 'Assistido',\n  'watching': 'Assistindo',\n  'toWathch': 'Assistir'\n}\n\nclass Series extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      isLoading: false,\n      series: []\n    }\n    this.renderSeries = this.renderSeries.bind(this)\n    this.loadData = this.loadData.bind(this)\n  }\n  componentDidMount () {\n    this.loadData()\n  }\n  loadData () {\n    this.setState({ isLoading: true })\n    api.loadSeriesByGenre(this.props.match.params.genre).then((res) => {\n      this.setState({\n        isLoading: false,\n        series: res.data\n      })\n    })\n  }\n  deleteSeries (id) {\n    api.deleteSeries(id).then((res) => this.loadData())\n  }\n  renderSeries (series) {\n    return (\n      <div key={series.id} className='item  col-xs-4 col-lg-4'>\n        <div className='thumbnail'>\n          <img className='group list-group-image' src='http://placehold.it/400x250/000/fff' alt='' />\n          <div className='caption'>\n            <h4 className='group inner list-group-item-heading'>\n              {series.name}\n            </h4>\n            <div className='row'>\n              <div className='col-xs-12 col-md-6'>\n                <p className='lead'>{series.genre} / {statuses[series.status]}</p>\n              </div>\n              <div className='col-xs-12 col-md-6'>\n                <Link className='btn btn-success' to={'/series-edit/' + series.id}>Editar</Link>\n                <a className='btn btn-success' onClick={() => this.deleteSeries(series.id)}>Excluir</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  render () {\n    return (\n      <section id='intro' className='intro-section'>\n        <h1>Séries {this.props.match.params.genre}</h1>\n        {this.state.isLoading &&\n          <p>Carregando, aguarede...</p>\n        }\n        {\n          !this.state.isLoading && this.state.series.length === 0 &&\n          <div className='alert alert-info'>Nenhuma série cadastrada.</div>\n        }\n        <div id='series' className='row list-group' >\n          {!this.state.isLoading &&\n            this.state.series.map(this.renderSeries)}\n        </div>\n      </section>\n    )\n  }\n}\nexport default Series\n","import React, { Component } from 'react'\nimport api from './Api'\nimport { Redirect } from 'react-router-dom'\n\nconst statuses = {\n  'watched': 'Assistido',\n  'watching': 'Assistindo',\n  'toWathch': 'Assistir'\n}\n\nclass NewSeries extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      genres: [],\n      isLoading: false,\n      redirect: false\n    }\n    this.saveSeries = this.saveSeries.bind(this)\n  }\n  componentDidMount () {\n    this.setState({ isLoading: true })\n    api.loadSeriesById(this.props.match.params.id)\n      .then((res) => console.log(res))\n    api.loadGenres()\n      .then((res) => {\n        this.setState({\n          isLoading: false,\n          genres: res.data\n        })\n      })\n  }\n  saveSeries () {\n    const newSeries = {\n      name: this.refs.name.value,\n      status: this.refs.status.value,\n      genre: this.refs.genre.value,\n      comments: this.refs.comments.value\n    }\n    api.saveSeries(newSeries)\n      .then((res) => {\n        this.setState({\n          redirect: '/series/' + this.refs.genre.value\n        })\n      })\n  }\n  render () {\n    return (\n      <section className='intro-section'>\n        {this.state.redirect &&\n          <Redirect to={this.state.redirect} />\n        }\n        <h1>Nova série</h1>\n        <form>\n            Nome: <input type='text' ref='name' className='form-control' /><br />\n            Status:\n          <select ref='status'>\n            {Object\n              .keys(statuses)\n              .map(key => <option key={key} value={key}>{statuses[key]}</option>)\n            }\n          </select><br />\n            Genero:\n          <select ref='genre'>\n            {this.state.genres\n              .map(key => <option key={key} value={key}>{key}</option>)\n            }\n          </select><br />\n          Comentários: <textarea ref='comments' type='text' className='form-control' /><br />\n          <button type='button' onClick={this.saveSeries}>Salvar</button>\n        </form>\n      </section>\n    )\n  }\n}\nexport default NewSeries\n","import React, { Component } from 'react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom'\n\nimport Home from './Home'\nimport EditSeries from './EditSeries'\nimport Series from './Series'\nimport NewSeries from './NewSeries'\n\nconst About = () => <section className='intro-section'><h1>Sobre</h1></section>\n\nclass App extends Component {\n  render () {\n    return (\n      <Router>\n        <div>\n          <nav className='navbar navbar-default navbar-fixed-top' role='navigation'>\n            <div className='container'>\n              <div className='navbar-header page-scroll'>\n                <a className='navbar-brand page-scroll' href='#page-top'>\n                  <img src='/images/logo.png' height='30' />\n                </a>\n              </div>\n\n              <div className='collapse navbar-collapse navbar-ex1-collapse'>\n                <ul className='nav navbar-nav'>\n                  <li>\n                    <Link to='/'>Menu item</Link>\n                  </li>\n                  <li>\n                    <Link to='/new'>Nova série</Link>\n                  </li>\n                  <li>\n                    <Link to='/about'>Sobre</Link>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </nav>\n        </div>\n        <Route exact path='/' component={Home} />\n        <Route exact path='/series/:genre' component={Series} />\n        <Route path='/series-edit/:id' component={EditSeries} />\n        <Route exact path='/about' component={About} />\n        <Route exact path='/new' component={NewSeries} />\n      </Router>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}